<?xml version="1.0" encoding="UTF-8"?>
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration debug="true">
    <!-- 定义项目名称 -->
    <property name="appName" value="omp"></property>
    <!-- 用于区分不同应用程序的日志记录 -->
    <contextName>${appName}</contextName>
    <!-- 定义日志存放位置的根目录 (此路径会生成eclipse根目录的相对路径，生产环境建议使用绝对路径)-->
    <property name="logHome" value="/data/logs" />

    <!--配置规则类的位置-->
    <conversionRule conversionWord="ip" converterClass="ideal4j.omp.source.plugin.logback.IPLogConfig" />

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%ip] [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 日志记录器，日期滚动记录info日志 -->
    <appender name="DAYINFO"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${logHome}/${appName}/log_info.log</file>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <FileNamePattern>${logHome}/${appName}/log-info-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
            <!-- 日志文件大小 -->
            <maxFileSize>10MB</maxFileSize>
            <!-- 日志文件存储空间大小 -->
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!-- 日志级别 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%ip] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="DAYERROR"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logHome}/${appName}/log_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${logHome}/${appName}/log-error-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%ip] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="DAYWARN"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logHome}/${appName}/log_warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${logHome}/${appName}/log-warn-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%ip] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 druid连接池监控持久化日志 -->
    <appender name="DRUIDLOGGER"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logHome}/${appName}/log_druid.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${logHome}/${appName}/log-druid-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>90</MaxHistory>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%ip] [%thread] - [%-5level] [%logger{50} : %line] - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!--myibatis log configure-->
    <logger name="ch.qos.logback" level="INFO"/>
    <logger name="org.quartz.impl.jdbcjobstore.JobStoreTX" level="ERROR"/>
    <logger name="ideal4j.leisure.config.datasource.druid.statlog" level="INFO">
        <appender-ref ref="DRUIDLOGGER" />
    </logger>

    <!--
	root与logger是父子关系，没有特别定义则默认为root，任何一个类只会和一个logger对应，
	要么是定义的logger，要么是root，判断的关键在于找到这个logger，然后判断这个logger的appender和level。
    -->
    <root level="debug">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="DAYINFO"/>
        <appender-ref ref="DAYWARN"/>
        <appender-ref ref="DAYERROR"/>
    </root>
</configuration>