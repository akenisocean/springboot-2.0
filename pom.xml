<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.5.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.ocean.springcloud</groupId>
    <artifactId>spring-cloud-docker-in-action</artifactId>
    <name>spring-cloud-docker-in-action</name>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <!--项目总描述-->
    <description>ocean的springcloud</description>
    <!--个人网站地址-->
    <url>http://happygiraffeisfun.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Hoxton.SR1</spring-cloud.version>
        <docker.push.image.name>akenisocean</docker.push.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
        <!--个人阿里云docker仓库地址-->
        <docker.repostory>registry.cn-shanghai.aliyuncs.com</docker.repostory>
        <docker.registry.name>happygiraffe</docker.registry.name>
        <fastjson.version>1.2.59</fastjson.version>
        <apollo.version>1.5.1</apollo.version>
        <docker.plugin.version>1.1.1</docker.plugin.version>
        <gson.version>2.8.2</gson.version>
        <qcloudsms.version>1.0.6</qcloudsms.version>
        <fastjson.version>1.2.13</fastjson.version>
        <druid-spring.version>1.1.21</druid-spring.version>
        <mysql-connection.version>6.0.6</mysql-connection.version>
        <mybatis-plus.version>3.3.1</mybatis-plus.version>
        <curator.version>2.10.0</curator.version>
    </properties>
    <!--添加对应的模块-->
    <modules>
        <module>ocean-eureka</module>
        <module>ocean-gateway</module>
        <module>ocean-hystrix-consumer</module>
        <module>ocean-hystrix-consumer2</module>
        <module>ocean-rabbit-producer</module>
        <module>ocean-ldap</module>
        <module>common-lib</module>
        <module>ocean-demo</module>
        <module>ocean-kafka</module>
        <module>ocean-third-demo</module>
        <module>ocean-gateway-zuul</module>
        <module>ocean-feign-consumer</module>
        <module>ocean-feign-provider</module>
        <module>ocean-mybaitsplus</module>
        <module>ocean-stream</module>
        <module>ocean-atomikos-druid</module>
        <module>ocean-elasticjob</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!--springcloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--携程apoll开源配置中心-->
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo-client</artifactId>
                <version>${apollo.version}</version>
            </dependency>
            <!--阿里巴巴fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connection.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--公共组件-->
<!--        <dependency>-->
<!--            <groupId>com.ocean.springcloud</groupId>-->
<!--            <artifactId>common-lib</artifactId>-->
<!--            <version>1.0.0</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>


    <distributionManagement>
        <repository>
            <id>jkstack</id>
            <name>jkstakc-私有仓库</name>
            <url>http://192.168.1.114:8081/repository/jkstack-maven/</url>
        </repository>
    </distributionManagement>


    <!--环境配置-->
    <profiles>
        <!--本地测试-->
        <profile>
            <id>localhost</id>
            <properties>
                <maven.profiles.activation>localhost</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
        <!--开发-->
        <profile>
            <id>dev</id>
            <properties>
                <maven.profiles.activation>dev</maven.profiles.activation>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--生产-->
        <profile>
            <id>pro</id>
            <properties>
                <maven.profiles.activation>pro</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--测试-->
        <profile>
            <id>test</id>
            <properties>
                <maven.profiles.activation>test</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--swarm集群-->
        <profile>
            <id>swarm</id>
            <properties>
                <maven.profiles.activation>swarm</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>



    <!--插件-->
    <build>
        <plugins>
            <!-- Spring Boot提供Maven编译插件 -->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->
            <!-- Maven打包插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <!-- 使用UTF-8编码资源文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

</project>