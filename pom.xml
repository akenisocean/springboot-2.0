<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/>
    </parent>

    <groupId>com.ocean.springcloud</groupId>
    <artifactId>spring-cloud-docker-in-action</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>
    <description>ocean的springcloud</description>
    <url>http://happygiraffeisfun.com</url>



    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <docker.push.image.name>akenisocean</docker.push.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
        <docker.repostory>registry.cn-shanghai.aliyuncs.com</docker.repostory>
        <docker.registry.name>happygiraffe</docker.registry.name>
        <fastjson.version>1.2.59</fastjson.version>
        <apollo.version>1.4.0</apollo.version>
    </properties>
    <!--添加对应的模块-->
    <modules>
        <module>ocean-eureka</module>
        <module>ocean-gateway</module>
        <module>ocean-hystrix-consumer</module>
        <module>ocean-hystrix-consumer2</module>
        <module>ocean-rabbit-producer</module>
        <module>ocean-demo2</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>com.ctrip.framework.apollo</groupId>
            <artifactId>apollo-client</artifactId>
            <version>${apollo.version}</version>
        </dependency>
    </dependencies>


    <!--环境配置-->
    <profiles>
        <!--本地测试-->
        <profile>
            <id>localhost</id>
            <properties>
                <maven.profiles.activation>localhost</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
        <!--开发-->
        <profile>
            <id>dev</id>
            <properties>
                <maven.profiles.activation>dev</maven.profiles.activation>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--生产-->
        <profile>
            <id>pro</id>
            <properties>
                <maven.profiles.activation>pro</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>

        <!--测试-->
        <profile>
            <id>test</id>
            <properties>
                <maven.profiles.activation>test</maven.profiles.activation>
            </properties>
            <build>
                <finalName>${project.name}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>


    <build>
        <plugins>
            <!-- Spring Boot提供Maven编译插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Maven打包插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <!-- 使用UTF-8编码资源文件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <!-- generator反向生成插件 -->
            <!--<plugin>-->
                <!--<groupId>org.mybatis.generator</groupId>-->
                <!--<artifactId>mybatis-generator-maven-plugin</artifactId>-->
                <!--<version>1.3.5</version>-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<version>${mysql.version}</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;配置文件的路径&ndash;&gt;-->
                    <!--<configurationFile>${project.basedir}/src/main/resources/generatorConfig.xml</configurationFile>-->
                    <!--<overwrite>true</overwrite>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>

        <resources>
            <resource>
                <!-- 自己(非Maven引入)导入jar包的目录 -->
                <directory>src/main/resources/lib</directory>
                <!-- Spring-Boot项目打包后存放的目录 -->
                <targetPath>BOOT-INF/lib/</targetPath>
                <includes>
                    <include>**/*.jar</include>
                </includes>
            </resource>
            <resource>
                <!-- 是否替换@xx@表示的maven properties属性值 -->
                <filtering>true</filtering>
                <!-- 源文件存放目录 -->
                <directory>src/main/resources</directory>
                <!-- 打包后存放目录 -->
                <targetPath>BOOT-INF/classes/</targetPath>
            </resource>
        </resources>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>